// <auto-generated />
using System;
using CycleFinder.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CycleFinder.Migrations
{
    [DbContext(typeof(EphemerisEntryContext))]
    [Migration("20201012213734_UpdateNames01")]
    partial class UpdateNames01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CycleFinder.Models.Planets.EphemerisEntry", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Date");

                    b.ToTable("EphemerisEntries");
                });

            modelBuilder.Entity("CycleFinder.Models.Planets.EphemerisEntry", b =>
                {
                    b.OwnsOne("CycleFinder.Models.Planets.Coordinate", "Jupiter", b1 =>
                        {
                            b1.Property<DateTime>("EphemerisEntryDate")
                                .HasColumnType("datetime2");

                            b1.Property<double>("Declination")
                                .HasColumnType("float");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.Property<double>("Speed")
                                .HasColumnType("float");

                            b1.HasKey("EphemerisEntryDate");

                            b1.ToTable("EphemerisEntries");

                            b1.WithOwner()
                                .HasForeignKey("EphemerisEntryDate");
                        });

                    b.OwnsOne("CycleFinder.Models.Planets.Coordinate", "Mars", b1 =>
                        {
                            b1.Property<DateTime>("EphemerisEntryDate")
                                .HasColumnType("datetime2");

                            b1.Property<double>("Declination")
                                .HasColumnType("float");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.Property<double>("Speed")
                                .HasColumnType("float");

                            b1.HasKey("EphemerisEntryDate");

                            b1.ToTable("EphemerisEntries");

                            b1.WithOwner()
                                .HasForeignKey("EphemerisEntryDate");
                        });

                    b.OwnsOne("CycleFinder.Models.Planets.Coordinate", "Mercury", b1 =>
                        {
                            b1.Property<DateTime>("EphemerisEntryDate")
                                .HasColumnType("datetime2");

                            b1.Property<double>("Declination")
                                .HasColumnType("float");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.Property<double>("Speed")
                                .HasColumnType("float");

                            b1.HasKey("EphemerisEntryDate");

                            b1.ToTable("EphemerisEntries");

                            b1.WithOwner()
                                .HasForeignKey("EphemerisEntryDate");
                        });

                    b.OwnsOne("CycleFinder.Models.Planets.Coordinate", "Moon", b1 =>
                        {
                            b1.Property<DateTime>("EphemerisEntryDate")
                                .HasColumnType("datetime2");

                            b1.Property<double>("Declination")
                                .HasColumnType("float");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.Property<double>("Speed")
                                .HasColumnType("float");

                            b1.HasKey("EphemerisEntryDate");

                            b1.ToTable("EphemerisEntries");

                            b1.WithOwner()
                                .HasForeignKey("EphemerisEntryDate");
                        });

                    b.OwnsOne("CycleFinder.Models.Planets.Coordinate", "Neptune", b1 =>
                        {
                            b1.Property<DateTime>("EphemerisEntryDate")
                                .HasColumnType("datetime2");

                            b1.Property<double>("Declination")
                                .HasColumnType("float");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.Property<double>("Speed")
                                .HasColumnType("float");

                            b1.HasKey("EphemerisEntryDate");

                            b1.ToTable("EphemerisEntries");

                            b1.WithOwner()
                                .HasForeignKey("EphemerisEntryDate");
                        });

                    b.OwnsOne("CycleFinder.Models.Planets.Coordinate", "Pluto", b1 =>
                        {
                            b1.Property<DateTime>("EphemerisEntryDate")
                                .HasColumnType("datetime2");

                            b1.Property<double>("Declination")
                                .HasColumnType("float");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.Property<double>("Speed")
                                .HasColumnType("float");

                            b1.HasKey("EphemerisEntryDate");

                            b1.ToTable("EphemerisEntries");

                            b1.WithOwner()
                                .HasForeignKey("EphemerisEntryDate");
                        });

                    b.OwnsOne("CycleFinder.Models.Planets.Coordinate", "Saturn", b1 =>
                        {
                            b1.Property<DateTime>("EphemerisEntryDate")
                                .HasColumnType("datetime2");

                            b1.Property<double>("Declination")
                                .HasColumnType("float");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.Property<double>("Speed")
                                .HasColumnType("float");

                            b1.HasKey("EphemerisEntryDate");

                            b1.ToTable("EphemerisEntries");

                            b1.WithOwner()
                                .HasForeignKey("EphemerisEntryDate");
                        });

                    b.OwnsOne("CycleFinder.Models.Planets.Coordinate", "Sun", b1 =>
                        {
                            b1.Property<DateTime>("EphemerisEntryDate")
                                .HasColumnType("datetime2");

                            b1.Property<double>("Declination")
                                .HasColumnType("float");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.Property<double>("Speed")
                                .HasColumnType("float");

                            b1.HasKey("EphemerisEntryDate");

                            b1.ToTable("EphemerisEntries");

                            b1.WithOwner()
                                .HasForeignKey("EphemerisEntryDate");
                        });

                    b.OwnsOne("CycleFinder.Models.Planets.Coordinate", "Uranus", b1 =>
                        {
                            b1.Property<DateTime>("EphemerisEntryDate")
                                .HasColumnType("datetime2");

                            b1.Property<double>("Declination")
                                .HasColumnType("float");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.Property<double>("Speed")
                                .HasColumnType("float");

                            b1.HasKey("EphemerisEntryDate");

                            b1.ToTable("EphemerisEntries");

                            b1.WithOwner()
                                .HasForeignKey("EphemerisEntryDate");
                        });

                    b.OwnsOne("CycleFinder.Models.Planets.Coordinate", "Venus", b1 =>
                        {
                            b1.Property<DateTime>("EphemerisEntryDate")
                                .HasColumnType("datetime2");

                            b1.Property<double>("Declination")
                                .HasColumnType("float");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.Property<double>("Speed")
                                .HasColumnType("float");

                            b1.HasKey("EphemerisEntryDate");

                            b1.ToTable("EphemerisEntries");

                            b1.WithOwner()
                                .HasForeignKey("EphemerisEntryDate");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
